from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class Ziel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, name=None, hoehe=None, schwierigkeit=None, bild=None, lat=None, lng=None):  # noqa: E501
        """Ziel - a model defined in OpenAPI

        :param id: The id of this Ziel.  # noqa: E501
        :type id: int
        :param name: The name of this Ziel.  # noqa: E501
        :type name: str
        :param hoehe: The hoehe of this Ziel.  # noqa: E501
        :type hoehe: float
        :param schwierigkeit: The schwierigkeit of this Ziel.  # noqa: E501
        :type schwierigkeit: int
        :param bild: The bild of this Ziel.  # noqa: E501
        :type bild: str
        :param lat: The latitude of this Ziel.  # noqa: E501
        :type lat: float
        :param lng: The longitude of this Ziel.  # noqa: E501
        :type lng: float
        """
        self.openapi_types = {
            'id': int,
            'name': str,
            'hoehe': float,
            'schwierigkeit': int,
            'bild': str,
            'lat': float,
            'lng': float
        }

        self.attribute_map = {
            'id': 'ID',
            'name': 'Name',
            'hoehe': 'hoehe',
            'schwierigkeit': 'Schwierigkeit',
            'bild': 'Bild',
            'lat': 'lat',
            'lng': 'lng'
        }

        self._id = id
        self._name = name
        self._hoehe = hoehe
        self._schwierigkeit = schwierigkeit
        self._bild = bild
        self._lat = lat
        self._lng = lng

    @classmethod
    def from_dict(cls, dikt) -> 'Ziel':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Ziel of this Ziel.  # noqa: E501
        :rtype: Ziel
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Ziel.


        :return: The id of this Ziel.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Ziel.


        :param id: The id of this Ziel.
        :type id: int
        """
        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this Ziel.


        :return: The name of this Ziel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Ziel.


        :param name: The name of this Ziel.
        :type name: str
        """
        self._name = name

    @property
    def hoehe(self) -> float:
        """Gets the hoehe of this Ziel.


        :return: The hoehe of this Ziel.
        :rtype: float
        """
        return self._hoehe

    @hoehe.setter
    def hoehe(self, hoehe: float):
        """Sets the hoehe of this Ziel.


        :param hoehe: The hoehe of this Ziel.
        :type hoehe: float
        """
        self._hoehe = hoehe

    @property
    def schwierigkeit(self) -> int:
        """Gets the schwierigkeit of this Ziel.


        :return: The schwierigkeit of this Ziel.
        :rtype: int
        """
        return self._schwierigkeit

    @schwierigkeit.setter
    def schwierigkeit(self, schwierigkeit: int):
        """Sets the schwierigkeit of this Ziel.


        :param schwierigkeit: The schwierigkeit of this Ziel.
        :type schwierigkeit: int
        """
        self._schwierigkeit = schwierigkeit

    @property
    def bild(self) -> str:
        """Gets the bild of this Ziel.


        :return: The bild of this Ziel.
        :rtype: str
        """
        return self._bild

    @bild.setter
    def bild(self, bild: str):
        """Sets the bild of this Ziel.


        :param bild: The bild of this Ziel.
        :type bild: str
        """
        self._bild = bild

    @property
    def lat(self) -> float:
        """Gets the lat of this Ziel.


        :return: The lat of this Ziel.
        :rtype: float
        """
        return self._lat

    @lat.setter
    def lat(self, lat: float):
        """Sets the lat of this Ziel.


        :param lat: The lat of this Ziel.
        :type lat: float
        """
        self._lat = lat

    @property
    def lng(self) -> float:
        """Gets the lng of this Ziel.


        :return: The lng of this Ziel.
        :rtype: float
        """
        return self._lng

    @lng.setter
    def lng(self, lng: float):
        """Sets the lng of this Ziel.


        :param lng: The lng of this Ziel.
        :type lng: float
        """
        self._lng = lng
