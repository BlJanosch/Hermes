from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class UserBestenliste(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, benutzername=None, profilbild=None, kmgelaufen=None, hoehenmeter=None):  # noqa: E501
        """UserBestenliste - a model defined in OpenAPI

        :param benutzername: The benutzername of this UserBestenliste.  # noqa: E501
        :type benutzername: str
        :param profilbild: The profilbild of this UserBestenliste.  # noqa: E501
        :type profilbild: str
        :param kmgelaufen: The kmgelaufen of this UserBestenliste.  # noqa: E501
        :type kmgelaufen: float
        :param hoehenmeter: The hoehenmeter of this UserBestenliste.  # noqa: E501
        :type hoehenmeter: float
        """
        self.openapi_types = {
            'benutzername': str,
            'profilbild': str,
            'kmgelaufen': float,
            'hoehenmeter': float
        }

        self.attribute_map = {
            'benutzername': 'Benutzername',
            'profilbild': 'Profilbild',
            'kmgelaufen': 'kmgelaufen',
            'hoehenmeter': 'hoehenmeter'
        }

        self._benutzername = benutzername
        self._profilbild = profilbild
        self._kmgelaufen = kmgelaufen
        self._hoehenmeter = hoehenmeter

    @classmethod
    def from_dict(cls, dikt) -> 'UserBestenliste':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UserBestenliste of this UserBestenliste.  # noqa: E501
        :rtype: UserBestenliste
        """
        return util.deserialize_model(dikt, cls)

    @property
    def benutzername(self) -> str:
        """Gets the benutzername of this UserBestenliste.


        :return: The benutzername of this UserBestenliste.
        :rtype: str
        """
        return self._benutzername

    @benutzername.setter
    def benutzername(self, benutzername: str):
        """Sets the benutzername of this UserBestenliste.


        :param benutzername: The benutzername of this UserBestenliste.
        :type benutzername: str
        """

        self._benutzername = benutzername

    @property
    def profilbild(self) -> str:
        """Gets the profilbild of this UserBestenliste.


        :return: The profilbild of this UserBestenliste.
        :rtype: str
        """
        return self._profilbild

    @profilbild.setter
    def profilbild(self, profilbild: str):
        """Sets the profilbild of this UserBestenliste.


        :param profilbild: The profilbild of this UserBestenliste.
        :type profilbild: str
        """

        self._profilbild = profilbild

    @property
    def kmgelaufen(self) -> float:
        """Gets the kmgelaufen of this UserBestenliste.


        :return: The kmgelaufen of this UserBestenliste.
        :rtype: float
        """
        return self._kmgelaufen

    @kmgelaufen.setter
    def kmgelaufen(self, kmgelaufen: float):
        """Sets the kmgelaufen of this UserBestenliste.


        :param kmgelaufen: The kmgelaufen of this UserBestenliste.
        :type kmgelaufen: float
        """

        self._kmgelaufen = kmgelaufen

    @property
    def hoehenmeter(self) -> float:
        """Gets the hoehenmeter of this UserBestenliste.


        :return: The hoehenmeter of this UserBestenliste.
        :rtype: float
        """
        return self._hoehenmeter

    @hoehenmeter.setter
    def hoehenmeter(self, hoehenmeter: float):
        """Sets the hoehenmeter of this UserBestenliste.


        :param hoehenmeter: The hoehenmeter of this UserBestenliste.
        :type hoehenmeter: float
        """

        self._hoehenmeter = hoehenmeter
