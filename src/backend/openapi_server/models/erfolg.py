from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class Erfolg(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, name=None, beschreibung=None, schwierigkeit=None):  # noqa: E501
        """Erfolg - a model defined in OpenAPI

        :param id: The id of this Erfolg.  # noqa: E501
        :type id: int
        :param name: The name of this Erfolg.  # noqa: E501
        :type name: str
        :param beschreibung: The beschreibung of this Erfolg.  # noqa: E501
        :type beschreibung: str
        :param schwierigkeit: The schwierigkeit of this Erfolg.  # noqa: E501
        :type schwierigkeit: int
        """
        self.openapi_types = {
            'id': int,
            'name': str,
            'beschreibung': str,
            'schwierigkeit': int
        }

        self.attribute_map = {
            'id': 'ID',
            'name': 'Name',
            'beschreibung': 'Beschreibung',
            'schwierigkeit': 'Schwierigkeit'
        }

        self._id = id
        self._name = name
        self._beschreibung = beschreibung
        self._schwierigkeit = schwierigkeit

    @classmethod
    def from_dict(cls, dikt) -> 'Erfolg':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Erfolg of this Erfolg.  # noqa: E501
        :rtype: Erfolg
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Erfolg.


        :return: The id of this Erfolg.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Erfolg.


        :param id: The id of this Erfolg.
        :type id: int
        """

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this Erfolg.


        :return: The name of this Erfolg.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Erfolg.


        :param name: The name of this Erfolg.
        :type name: str
        """

        self._name = name

    @property
    def beschreibung(self) -> str:
        """Gets the beschreibung of this Erfolg.


        :return: The beschreibung of this Erfolg.
        :rtype: str
        """
        return self._beschreibung

    @beschreibung.setter
    def beschreibung(self, beschreibung: str):
        """Sets the beschreibung of this Erfolg.


        :param beschreibung: The beschreibung of this Erfolg.
        :type beschreibung: str
        """

        self._beschreibung = beschreibung

    @property
    def schwierigkeit(self) -> int:
        """Gets the schwierigkeit of this Erfolg.


        :return: The schwierigkeit of this Erfolg.
        :rtype: int
        """
        return self._schwierigkeit

    @schwierigkeit.setter
    def schwierigkeit(self, schwierigkeit: int):
        """Sets the schwierigkeit of this Erfolg.


        :param schwierigkeit: The schwierigkeit of this Erfolg.
        :type schwierigkeit: int
        """

        self._schwierigkeit = schwierigkeit
